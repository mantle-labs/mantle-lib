/* 
 * Mantle API
 *
 * Most endpoints require authentication with an <strong>API key</strong><br><br>                                         You must first authenticate with your account by logging in your account on <strong><a target='_blank' href='https://www.mantleblockchain.com'/>mantleblockchain.com</a></strong>.<br>                                         Then, you will need to navigate to the <strong>My API Key</strong> page in the Settings section.<br>                                         You need to have the role administrator of your organization to generate an <strong>API Key</strong>.<br><br>                                         Then use this <strong>API Key</strong> in all your requests with the following header:<br><br>                                         <strong>[ x-api-key: API_KEY ]</strong><br><br>For more information on the different product and more, you can refer to the <a target='_blank' href='https://docs.mantleblockchain.com/v1.0/documentation/home'><strong>knowledge base</strong></a>
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using mantle.lib.Client;
using mantle.lib.Api;
using mantle.lib.Model;

namespace mantle.lib.Test
{
    /// <summary>
    ///  Class for testing ApiKeysApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ApiKeysApiTests
    {
        private ApiKeysApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ApiKeysApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ApiKeysApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ApiKeysApi
            //Assert.IsInstanceOfType(typeof(ApiKeysApi), instance, "instance is a ApiKeysApi");
        }

        
        /// <summary>
        /// Test CreateApiKey
        /// </summary>
        [Test]
        public void CreateApiKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xApiKey = null;
            //CreateApiKeyRequest request = null;
            //instance.CreateApiKey(xApiKey, request);
            
        }
        
        /// <summary>
        /// Test DeleteApiKey
        /// </summary>
        [Test]
        public void DeleteApiKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string xApiKey = null;
            //instance.DeleteApiKey(userId, xApiKey);
            
        }
        
        /// <summary>
        /// Test GetAllApiKeys
        /// </summary>
        [Test]
        public void GetAllApiKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xApiKey = null;
            //var response = instance.GetAllApiKeys(xApiKey);
            //Assert.IsInstanceOf<List<AnonymousApiKeyResponse>> (response, "response is List<AnonymousApiKeyResponse>");
        }
        
    }

}
